apiVersion: v1
kind: ConfigMap
metadata:
  name: pyflink-kafka-sink-script
data:
  pyflink-kafka-sink.py: |
    from pyflink.common import WatermarkStrategy, Encoder
    from pyflink.common.serialization import SimpleStringSchema
    from pyflink.common.typeinfo import Types
    from pyflink.datastream import StreamExecutionEnvironment
    from pyflink.datastream.connectors import FileSink, RollingPolicy, OutputFileConfig
    from pyflink.datastream.connectors.kafka import KafkaOffsetsInitializer, KafkaSource
    import os
    import sys

    site_packages_path = '/opt/flink/.local/lib/python3.11/site-packages'
    if site_packages_path not in sys.path:
        sys.path.insert(0, site_packages_path)

    def kafka_sink_example():
        KAFKA_BROKER = "my-cluster-kafka-bootstrap.dlee-kafkanodepool.svc.cluster.local:9092"
        KAFKA_TOPIC = "pyflink-sink-file"
        SINK_DIR = "/opt/flink/sink"

        env = StreamExecutionEnvironment.get_execution_environment()
        kafka_source = (
            KafkaSource.builder()
            .set_bootstrap_servers(KAFKA_BROKER)
            .set_topics(KAFKA_TOPIC)
            .set_group_id("flink_group")
            .set_starting_offsets(KafkaOffsetsInitializer.earliest())
            .set_value_only_deserializer(SimpleStringSchema())
            .build()
        )

        ds = env.from_source(kafka_source, WatermarkStrategy.no_watermarks(), "Kafka Source")
        ds = ds.map(lambda a: len(a), output_type=Types.ROW([Types.INT()]))

        # Directly use SINK_DIR for the output path
        output_path = os.path.join(SINK_DIR, "sink.log")

        sink = (
            FileSink.for_row_format(
                base_path=output_path, encoder=Encoder.simple_string_encoder()
            )
            .with_output_file_config(OutputFileConfig.builder().build())
            .with_rolling_policy(RollingPolicy.default_rolling_policy())
            .build()
        )
        ds.sink_to(sink=sink)
        env.execute("kafka_sink_example")


    if __name__ == "__main__":
        kafka_sink_example()
